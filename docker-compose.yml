version: '3.8'

services:
  # SQL Server
  ezamjena-sql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourPassword123
      - MSSQL_PID=Developer
    ports:
      - "1401:1433"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U SA -P YourPassword123 -Q 'SELECT 1'"]
      interval: 10s
      retries: 10
      timeout: 5s

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "15672:15672" # Management UI
      - "5672:5672"   # AMQP Port
    networks:
      - app-network
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 10s
      retries: 5

  # eZamjena API
  ezamjena-api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=ezamjena-sql,1433;Initial Catalog=IB190019;user=SA;Password=YourPassword123;ConnectRetryCount=0;Encrypt=False;
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5238:5238"
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - ezamjena-sql
      - rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5238 || exit 1"]
      interval: 10s
      retries: 5

  # eZamjena Subscriber
  ezamjena-subscriber:
    build:
      context: .
      dockerfile: eZamjena.Subscriber/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Data Source=ezamjena-sql,1433;Initial Catalog=IB190019;user=SA;Password=YourPassword123;ConnectRetryCount=0;Encrypt=False;
      - BrevoApi__ApiKey=${BREVO_API_KEY}
      - BrevoApi__SenderEmail=${BREVO_SENDER_EMAIL}
      - BrevoApi__SenderName=${BREVO_SENDER_NAME}
      - BrevoApi__SmtpHost=${BREVO_SMTP_HOST}
      - BrevoApi__SmtpPort=${BREVO_SMTP_PORT}
    ports:
      - "587:587"  
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy


networks:
  app-network:
    driver: bridge